#!/bin/bash

# If started as root, then re-start as user "gavenkoa":
if [ "$(id -u)" -eq 0 ]; then
    exec sudo -H -u bo $0 "$@"
    echo "This is never reached.";
fi

# Directory containing wallpapers
WALLPAPER_DIR=~/wallpapers
LANDSCAPE_DIR=~/wallpapers/landscape
PORTRAIT_DIR=~/wallpapers/portrait

# Directory for storing resized images and the collage
RESIZED_DIR=~/resized_wallpapers
COLLAGE_DIR=~/temp_wallpapers
mkdir -p "$RESIZED_DIR"
mkdir -p "$COLLAGE_DIR"
mkdir -p "$LANDSCAPE_DIR"
mkdir -p "$PORTRAIT_DIR"

# Log file for images used in the collage
LOG_FILE="$COLLAGE_DIR/collage_images.log"

# Get the resolution of the secondary display using xrandr
SECONDARY_DISPLAY=$(xrandr | grep " connected" | grep -v "primary" | cut -d' ' -f1)
SCREEN_RESOLUTION=$(xrandr | grep -A1 "^$SECONDARY_DISPLAY" | tail -n1 | sed -n 's/.* \([0-9]\+x[0-9]\+\) .*/\1/p')
SCREEN_WIDTH=$(echo $SCREEN_RESOLUTION | cut -d'x' -f2)
SCREEN_HEIGHT=$(echo $SCREEN_RESOLUTION | cut -d'x' -f1)

# Print the resolution of the primary display
echo "Resolution of the primary display: $SCREEN_RESOLUTION"

# Move new images to respective directories
for IMAGE in "$WALLPAPER_DIR"/*; do
    if [ -f "$IMAGE" ]; then
        WIDTH=$(identify -format "%w" "$IMAGE")
        HEIGHT=$(identify -format "%h" "$IMAGE")
        if [ "$WIDTH" -gt "$HEIGHT" ]; then
            mv "$IMAGE" "$LANDSCAPE_DIR/"
        else
            mv "$IMAGE" "$PORTRAIT_DIR/"
        fi
    fi
done

# Collect landscape and portrait images
LANDSCAPE_IMAGES=("$LANDSCAPE_DIR"/*)
PORTRAIT_IMAGES=("$PORTRAIT_DIR"/*)

# Randomly choose to use either landscape or portrait images
if [ $((RANDOM % 2)) -eq 0 ]; then
    IMAGES=("${LANDSCAPE_IMAGES[@]}")
    GRID_COLUMNS=4
    GRID_ROWS=3
    ORIENTATION="landscape"
else
    IMAGES=("${PORTRAIT_IMAGES[@]}")
    GRID_COLUMNS=5
    GRID_ROWS=2
    ORIENTATION="portrait"
fi

echo "Orientation: $ORIENTATION"
echo "Number of rows in the grid: $GRID_ROWS"
echo "Number of columns in the grid: $GRID_COLUMNS"

# Calculate the number of images to use based on the grid size
NUM_IMAGES=$((GRID_COLUMNS * GRID_ROWS))

# Select random images from the chosen orientation
SELECTED_IMAGES=$(printf "%s\n" "${IMAGES[@]}" | shuf -n $NUM_IMAGES)

# Calculate the target size for each image in the grid
TARGET_WIDTH=$((SCREEN_WIDTH / GRID_COLUMNS))
TARGET_HEIGHT=$((SCREEN_HEIGHT / GRID_ROWS))

echo "Target width: $TARGET_WIDTH"
echo "Target height: $TARGET_HEIGHT"

# Clear previous log and collage
rm -f "$LOG_FILE"
rm -f "$COLLAGE_DIR/collage.png"

# Resize images to fit within the target size while maintaining aspect ratio
RESIZED_IMAGES=()
for IMAGE in $SELECTED_IMAGES; do
    if [ -f "$IMAGE" ]; then
        BASENAME=$(basename "$IMAGE")
        EXTENSION="${BASENAME##*.}"
        BASENAME_NO_EXT="${BASENAME%.*}"
        RESIZED_IMAGE="$RESIZED_DIR/resized_$BASENAME_NO_EXT.png"
        if [ ! -f "$RESIZED_IMAGE" ]; then
            echo "Resizing $IMAGE..."
            if [ "$EXTENSION" == "heic" ] || [ "$EXTENSION" == "HEIC" ]; then
                convert "$IMAGE" -resize "${TARGET_WIDTH}x${TARGET_HEIGHT}" -background white -gravity center -extent ${TARGET_WIDTH}x${TARGET_HEIGHT} -colorspace sRGB "$RESIZED_IMAGE"
            else
                convert "$IMAGE" -resize "${TARGET_WIDTH}x${TARGET_HEIGHT}" -background white -gravity center -extent ${TARGET_WIDTH}x${TARGET_HEIGHT} -colorspace sRGB "$RESIZED_IMAGE"
            fi
        else
            echo "Using cached resized image for $IMAGE..."
        fi
        RESIZED_IMAGES+=("$RESIZED_IMAGE")
        echo "$IMAGE" >> "$LOG_FILE"
    else
        echo "Warning: Image $IMAGE does not exist and will be skipped."
    fi
done

# Create a collage of the resized images
COLLAGE="$COLLAGE_DIR/collage.png"
montage "${RESIZED_IMAGES[@]}" -tile ${GRID_COLUMNS}x${GRID_ROWS} -geometry +0+0 "$COLLAGE"

echo "montage made with ${GRID_ROWS}x${GRID_COLUMNS} grid"

# Ensure the collage is exactly the screen resolution
convert "$COLLAGE" -resize ${SCREEN_WIDTH}x${SCREEN_HEIGHT} -gravity center -background black -extent ${SCREEN_WIDTH}x${SCREEN_HEIGHT} "$COLLAGE"

# Update the timestamp of the collage to refresh the cache
touch "$COLLAGE"

# Print the path that will be used by gsettings
COLLAGE_URI="file:///$COLLAGE"
echo "Setting background with URI: $COLLAGE_URI"

# Set the collage as the desktop background
feh --output "$SECONDARY_DISPLAY" --bg-scale "$COLLAGE"

# Clean up temporary resized images
# rm "${RESIZED_IMAGES[@]}" # Commenting this line to keep the resized images for reuse
